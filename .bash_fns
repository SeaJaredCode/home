#!/bin/bash

# Idempotent fn to add dir to $PATH
add_to_PATH () {
    for d; do
        d=$(cd -- "$d" && { pwd -P || pwd;  }) 2>/dev/null  # canonicalize symbolic links
        if [ ! -d "$d"  ]; then continue; fi  # skip nonexistent directory

        case ":$PATH:" in
            *":$d:"*) :;;
            *) export PATH=$PATH:$d;;
        esac
    done
}
export -f add_to_PATH

findd() {
    find . -type d | grep "$1"
}

findf() {
    find . -type f | grep "$1"
}

xrm() {
    xargs rm -r
}

echo_error() {
    cat <<< "$@" 1>&2
}
export -f echo_error

# Docker functions
if which docker >> /dev/null; then
    dsh() {
        image=$1
            shift
            docker run -it $image /bin/sh "$@"
    }

    dash() {
        image=$1
            shift
            docker run -it $image /bin/bash "$@"
    }

    drun() {
        docker run "$@"
    }

    drm() {
        docker image rm -f $1
    }

    dmake() {
        docker build . -t $1
    }

    export -f dsh dash drun drm dmake
fi;

if [ -d /var/kafka ] || [ -d /opt/kafka  ]; then
    kbin() {
        kpath=/opt/kafka/current/bin
        kscripts=/Users/jared/Projects/mono/utils/kafka

        binary=$1
        shift

        case $binary in
        ls)
            find $kscripts $kpath -type f -depth 1 -perm +111 | xargs basename
            ;;
        *)
            export PATH=$kscripts:$kpath:$PATH
            $binary "$@"
            ;;
        esac
    }

    export -f kbin
fi

# Kubernetes functions
if which kubectl >> /dev/null; then
    source .kube_fns
fi
